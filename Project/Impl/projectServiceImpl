package com.example.ProjectManagementSystem.Project.Impl;

import com.example.ProjectManagementSystem.Project.AllValidation;
import com.example.ProjectManagementSystem.Project.Project;
import com.example.ProjectManagementSystem.Project.ProjectRepository;
import com.example.ProjectManagementSystem.Project.ProjectService;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Optional;

@Service
public class ProjectServiceImpl implements ProjectService {
    //private List<Project> projects = new ArrayList<>();
    ProjectRepository projectRepository;

    public ProjectServiceImpl(ProjectRepository projectRepository) {
        this.projectRepository = projectRepository;
    }

    @Override
    public List<Project> getAllProjects(){
        return projectRepository.findAll();
    }

    @Override
    public void createProject(Project project) {
        projectRepository.save(project);
    }

    @Override
    public Project getProjectById(Long id) {
        return projectRepository.findById(id).orElse(null);
    }

    @Override
    public boolean deleteProjectById(Long id) {
        try{
            projectRepository.deleteById(id);
            return true;
        }
        catch (Exception e){
            return false;
        }
    }

    @Override
    public boolean updateProjectById(Long id, Project updateProject) {
        Optional<Project> projectOptional = projectRepository.findById(id);
        if(projectOptional.isPresent()){
            Project project = projectOptional.get();
            //we are not updating the id - because it's considered as primary key
            project.setName(updateProject.getName());
            project.setDescription(updateProject.getDescription());
            project.setStartDate(updateProject.getStartDate());
            project.setEndDate(updateProject.getEndDate());
            projectRepository.save(project);
            return true;
        }
        return false;
    }

}
